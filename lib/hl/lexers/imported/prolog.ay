use("atomy")
use("hl/define")

Lexer = lexer:
name: "Prolog"
aliases: ["prolog"]
extensions: [".prolog", ".pro", ".pl"]
mimetypes: ["text/x-prolog"]
start: .root
flags: 0

lex(nested-comment):
  r"\*/" is(comment.multiline) -> pop
  r"/\*" is(comment.multiline) -> push
  r"[^*/]+" is(comment.multiline)
  r"[*/]" is(comment.multiline)

lex(root):
  r"^\#.*" is(comment.single)
  r"/\*" is(comment.multiline) -> go-to(nested-comment)
  r"%.*" is(comment.single)
  r"[0-9]+" is(literal.number)
  r"[\[\](){}|.,;!]" is(punctuation)
  r":-|-->" is(punctuation)
  r"\"(?:\\x[0-9a-fA-F]+\\|\\u[0-9a-fA-F]{4}|\\U[0-9a-fA-F]{8}|\\[0-7]+\\|\\[\w\W]|[^\"])*\"" is(literal.string.double)
  r"'(?:''|[^'])*'" is(literal.string.atom)
  r"(is|<|>|=<|>=|==|=:=|=|/|//|\*|\+|-)(?=\s|[a-zA-Z0-9\[])" is(operator)
  r"(mod|div|not)\b" is(operator)
  r"_" is(keyword)
  r"([a-z]+)(:)" is(by-groups(name.namespace, punctuation))
  r"([a-z\192-\8191\12352-\55295\57344-\65519][a-zA-Z0-9_$\192-\8191\12352-\55295\57344-\65519]*)(\s*)(:-|-->)" is(by-groups(name.function, text, operator))
  r"([a-z\192-\8191\12352-\55295\57344-\65519][a-zA-Z0-9_$\192-\8191\12352-\55295\57344-\65519]*)(\s*)(\()" is(by-groups(name.function, text, punctuation))
  r"[a-z\192-\8191\12352-\55295\57344-\65519][a-zA-Z0-9_$\192-\8191\12352-\55295\57344-\65519]*" is(literal.string.atom)
  r"[\#&*+\-./:<=>?@\\^\126\161-\191\8208-\12351]+" is(literal.string.atom)
  r"[A-Z_][A-Za-z0-9_]*" is(name.variable)
  r"\s+|[\8192-\8207\65520-\65534\65519]" is(text)


use(require("atomy"))
use(require("hl/define"))

lexer = lexer:
name: "IRC logs"
aliases: ["irc"]
extensions: [".weechatlog"]
mimetypes: ["text/x-irclog"]
start: .root
flags: 0

lex(msg):
  r"\S+:(?!//)" is(name.attribute)
  r".*\n" is(text) -> pop

lex(root):
  r"^\*\*\*\*(.*)\*\*\*\*$" is(comment)
  r"^\10        (\10          \# irssi / xchat and others\10          (?: \[|\()?                  \# Opening bracket or paren for the timestamp\10            (?:                        \# Timestamp\10                (?: (?:\d{1,4} [-/]?)+ \# Date as - or /-separated groups of digits\10                 [T ])?                \# Date/time separator: T or space\10                (?: \d?\d [:.]?)+      \# Time as :/.-separated groups of 1 or 2 digits\10            )\10          (?: \]|\))?\s+               \# Closing bracket or paren for the timestamp\10        |\10          \# weechat\10          \d{4}\s\w{3}\s\d{2}\s        \# Date\10          \d{2}:\d{2}:\d{2}\s+         \# Time + Whitespace\10        |\10          \# xchat\10          \w{3}\s\d{2}\s               \# Date\10          \d{2}:\d{2}:\d{2}\s+         \# Time + Whitespace\10        )?\10    (\s*<[^>]*>\s*)$" is(by-groups(comment.preproc, name.tag))
  r"^\10        (\10          \# irssi / xchat and others\10          (?: \[|\()?                  \# Opening bracket or paren for the timestamp\10            (?:                        \# Timestamp\10                (?: (?:\d{1,4} [-/]?)+ \# Date as - or /-separated groups of digits\10                 [T ])?                \# Date/time separator: T or space\10                (?: \d?\d [:.]?)+      \# Time as :/.-separated groups of 1 or 2 digits\10            )\10          (?: \]|\))?\s+               \# Closing bracket or paren for the timestamp\10        |\10          \# weechat\10          \d{4}\s\w{3}\s\d{2}\s        \# Date\10          \d{2}:\d{2}:\d{2}\s+         \# Time + Whitespace\10        |\10          \# xchat\10          \w{3}\s\d{2}\s               \# Date\10          \d{2}:\d{2}:\d{2}\s+         \# Time + Whitespace\10        )?\10    \10                (\s*<.*?>\s*)          \# Nick " is(by-groups(comment.preproc, name.tag)) -> go-to(msg)
  r"^\10        (\10          \# irssi / xchat and others\10          (?: \[|\()?                  \# Opening bracket or paren for the timestamp\10            (?:                        \# Timestamp\10                (?: (?:\d{1,4} [-/]?)+ \# Date as - or /-separated groups of digits\10                 [T ])?                \# Date/time separator: T or space\10                (?: \d?\d [:.]?)+      \# Time as :/.-separated groups of 1 or 2 digits\10            )\10          (?: \]|\))?\s+               \# Closing bracket or paren for the timestamp\10        |\10          \# weechat\10          \d{4}\s\w{3}\s\d{2}\s        \# Date\10          \d{2}:\d{2}:\d{2}\s+         \# Time + Whitespace\10        |\10          \# xchat\10          \w{3}\s\d{2}\s               \# Date\10          \d{2}:\d{2}:\d{2}\s+         \# Time + Whitespace\10        )?\10    \10                (\s*[*]\s+)            \# Star\10                (\S+\s+.*?\n)          \# Nick + rest of message " is(by-groups(comment.preproc, keyword, generic.inserted))
  r"^\10        (\10          \# irssi / xchat and others\10          (?: \[|\()?                  \# Opening bracket or paren for the timestamp\10            (?:                        \# Timestamp\10                (?: (?:\d{1,4} [-/]?)+ \# Date as - or /-separated groups of digits\10                 [T ])?                \# Date/time separator: T or space\10                (?: \d?\d [:.]?)+      \# Time as :/.-separated groups of 1 or 2 digits\10            )\10          (?: \]|\))?\s+               \# Closing bracket or paren for the timestamp\10        |\10          \# weechat\10          \d{4}\s\w{3}\s\d{2}\s        \# Date\10          \d{2}:\d{2}:\d{2}\s+         \# Time + Whitespace\10        |\10          \# xchat\10          \w{3}\s\d{2}\s               \# Date\10          \d{2}:\d{2}:\d{2}\s+         \# Time + Whitespace\10        )?\10    \10                (\s*(?:\*{3}|<?-[!@=P]?->?)\s*)  \# Star(s) or symbols\10                (\S+\s+)                     \# Nick + Space\10                (.*?\n)                         \# Rest of message " is(by-groups(comment.preproc, keyword, literal.string, comment))
  r"^.*?\n" is(text)

const-set(.Lexer, lexer)

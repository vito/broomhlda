use(require("atomy"))
use(require("hl/define"))

lexer = lexer:
name: "autohotkey"
aliases: ["ahk"]
extensions: [".ahk", ".ahkl"]
mimetypes: ["text/x-autohotkey"]
start: .root
flags: 0

lex(builtInVariables):
  r"(?i)(A_AhkPath|A_AhkVersion|A_AppData|A_AppDataCommon|A_AutoTrim|A_BatchLines|A_CaretX|A_CaretY|A_ComputerName|A_ControlDelay|A_Cursor|A_DDDD|A_DDD|A_DD|A_DefaultMouseSpeed|A_Desktop|A_DesktopCommon|A_DetectHiddenText|A_DetectHiddenWindows|A_EndChar|A_EventInfo|A_ExitReason|A_FormatFloat|A_FormatInteger|A_Gui|A_GuiEvent|A_GuiControl|A_GuiControlEvent|A_GuiHeight|A_GuiWidth|A_GuiX|A_GuiY|A_Hour|A_IconFile|A_IconHidden|A_IconNumber|A_IconTip|A_Index|A_IPAddress1|A_IPAddress2|A_IPAddress3|A_IPAddress4|A_ISAdmin|A_IsCompiled|A_IsCritical|A_IsPaused|A_IsSuspended|A_KeyDelay|A_Language|A_LastError|A_LineFile|A_LineNumber|A_LoopField|A_LoopFileAttrib|A_LoopFileDir|A_LoopFileExt|A_LoopFileFullPath|A_LoopFileLongPath|A_LoopFileName|A_LoopFileShortName|A_LoopFileShortPath|A_LoopFileSize|A_LoopFileSizeKB|A_LoopFileSizeMB|A_LoopFileTimeAccessed|A_LoopFileTimeCreated|A_LoopFileTimeModified|A_LoopReadLine|A_LoopRegKey|A_LoopRegName|A_LoopRegSubkey|A_LoopRegTimeModified|A_LoopRegType|A_MDAY|A_Min|A_MM|A_MMM|A_MMMM|A_Mon|A_MouseDelay|A_MSec|A_MyDocuments|A_Now|A_NowUTC|A_NumBatchLines|A_OSType|A_OSVersion|A_PriorHotkey|A_ProgramFiles|A_Programs|A_ProgramsCommon|A_ScreenHeight|A_ScreenWidth|A_ScriptDir|A_ScriptFullPath|A_ScriptName|A_Sec|A_Space|A_StartMenu|A_StartMenuCommon|A_Startup|A_StartupCommon|A_StringCaseSense|A_Tab|A_Temp|A_ThisFunc|A_ThisHotkey|A_ThisLabel|A_ThisMenu|A_ThisMenuItem|A_ThisMenuItemPos|A_TickCount|A_TimeIdle|A_TimeIdlePhysical|A_TimeSincePriorHotkey|A_TimeSinceThisHotkey|A_TitleMatchMode|A_TitleMatchModeSpeed|A_UserName|A_WDay|A_WinDelay|A_WinDir|A_WorkingDir|A_YDay|A_YEAR|A_YWeek|A_YYYY|Clipboard|ClipboardAll|ComSpec|ErrorLevel|ProgramFiles|True|False|A_IsUnicode|A_FileEncoding|A_OSVersion|A_PtrSize)\b" is(name.variable)

lex(garbage):
  r"[^\S\n]" is(text)

lex(incontinuation):
  r"^\s*\)" is(generic) -> pop
  r"[^)]" is(generic)
  r"[)]" is(generic)

lex(labels):
  r"(^\s*)([^:\s\(\\"]+?:{1,2})" is(by-groups(text, name.label))
  r"(^\s*)(::[^:\s]+?::)" is(by-groups(text, name.label))

lex(stringescape):
  r"\\"\\"|\`([\,\%\`abfnrtv])" is(literal.string.escape)

lex(numbers):
  r"(\d+\.\d*|\d*\.\d+)([eE][+-]?[0-9]+)?" is(literal.number.float)
  r"\d+[eE][+-]?[0-9]+" is(literal.number.float)
  r"0\d+" is(literal.number.oct)
  r"0[xX][a-fA-F0-9]+" is(literal.number.hex)
  r"\d+L" is(literal.number.integer.long)
  r"\d+" is(literal.number.integer)

lex(commands):
  r"(?i)^(\s*)(global|local|static|\#AllowSameLineComments|\#ClipboardTimeout|\#CommentFlag|\#ErrorStdOut|\#EscapeChar|\#HotkeyInterval|\#HotkeyModifierTimeout|\#Hotstring|\#IfWinActive|\#IfWinExist|\#IfWinNotActive|\#IfWinNotExist|\#IncludeAgain|\#Include|\#InstallKeybdHook|\#InstallMouseHook|\#KeyHistory|\#LTrim|\#MaxHotkeysPerInterval|\#MaxMem|\#MaxThreads|\#MaxThreadsBuffer|\#MaxThreadsPerHotkey|\#NoEnv|\#NoTrayIcon|\#Persistent|\#SingleInstance|\#UseHook|\#WinActivateForce|AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGetFocus|ControlGetPos|ControlGetText|ControlGet|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|Edit|Else|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|IfEqual|IfExist|IfGreaterOrEqual|IfGreater|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|If |ImageSearch|IniDelete|IniRead|IniWrite|InputBox|Input|KeyHistory|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClickDrag|MouseClick|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|RunAs|RunWait|Run|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|Send|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|While|WinActivate|WinActivateBottom|WinClose|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinGet|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimizeAllUndo|WinMinimizeAll|WinMinimize|WinMove|WinRestore|WinSetTitle|WinSet|WinShow|WinWaitActive|WinWaitClose|WinWaitNotActive|WinWait)\b" is(by-groups(text, name.builtin))

lex(dqs):
  r"\"" is(literal.string) -> pop
  any-of(strings)

lex(builtInFunctions):
  r"(?i)(Abs|ACos|Asc|ASin|ATan|Ceil|Chr|Cos|DllCall|Exp|FileExist|Floor|GetKeyState|IL_Add|IL_Create|IL_Destroy|InStr|IsFunc|IsLabel|Ln|Log|LV_Add|LV_Delete|LV_DeleteCol|LV_GetCount|LV_GetNext|LV_GetText|LV_Insert|LV_InsertCol|LV_Modify|LV_ModifyCol|LV_SetImageList|Mod|NumGet|NumPut|OnMessage|RegExMatch|RegExReplace|RegisterCallback|Round|SB_SetIcon|SB_SetParts|SB_SetText|Sin|Sqrt|StrLen|SubStr|Tan|TV_Add|TV_Delete|TV_GetChild|TV_GetCount|TV_GetNext|TV_Get|TV_GetParent|TV_GetPrev|TV_GetSelection|TV_GetText|TV_Modify|VarSetCapacity|WinActive|WinExist|Object|ComObjActive|ComObjArray|ComObjEnwrap|ComObjUnwrap|ComObjParameter|ComObjType|ComObjConnect|ComObjCreate|ComObjGet|ComObjError|ComObjValue|Insert|MinIndex|MaxIndex|Remove|SetCapacity|GetCapacity|GetAddress|_NewEnum|FileOpen|Read|Write|ReadLine|WriteLine|ReadNumType|WriteNumType|RawRead|RawWrite|Seek|Tell|Close|Next|IsObject|StrPut|StrGet|Trim|LTrim|RTrim)\b" is(name.function)

lex(incomment):
  r"^\s*\*/" is(comment.multiline) -> pop
  r"[^*/]" is(comment.multiline)
  r"[*/]" is(comment.multiline)

lex(root):
  r"^(\s*)(/\*)" is(by-groups(text, comment.multiline)) -> go-to(incomment)
  r"^(\s*)(\()" is(by-groups(text, generic)) -> go-to(incontinuation)
  r"\s+;.*?$" is(comment.singleline)
  r"^;.*?$" is(comment.singleline)
  r"[\]{}(),;\[]" is(punctuation)
  r"(in|is|and|or|not)\b" is(operator.word)
  r"\%[a-zA-Z_\#@$][a-zA-Z0-9_\#@$]*\%" is(name.variable)
  r"!=|==|:=|\.=|<<|>>|[-\126+/*%=<>&^|?:!.]" is(operator)
  any-of(commands)
  any-of(labels)
  any-of(builtInFunctions)
  any-of(builtInVariables)
  r"\"" is(literal.string) -> combined(stringescape, dqs)
  any-of(numbers)
  r"[a-zA-Z_\#@$][a-zA-Z0-9_\#@$]*" is(name)
  r"\\|\'" is(text)
  r"\`([\,\%\`abfnrtv\-\+;])" is(literal.string.escape)
  any-of(garbage)

lex(strings):
  r"[^\"\n]+" is(literal.string)

const-set(.Lexer, lexer)

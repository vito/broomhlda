use("atomy")
use("hl/define")

Lexer = lexer:
name: "objdump"
aliases: ["objdump"]
extensions: [".objdump"]
mimetypes: ["text/x-objdump"]
start: .root
flags: 0

lex(root):
  r"(.*?)(:)( +file format )(.*?)$" is(by-groups(name.label, punctuation, text, literal.string))
  r"(Disassembly of section )(.*?)(:)$" is(by-groups(text, name.label, punctuation))
  r"([0-9A-Za-z]+)( )(<)(.*?)([-+])(0[xX][A-Za-z0-9]+)(>:)$" is(by-groups(literal.number.hex, text, punctuation, name.function, punctuation, literal.number.hex, punctuation))
  r"([0-9A-Za-z]+)( )(<)(.*?)(>:)$" is(by-groups(literal.number.hex, text, punctuation, name.function, punctuation))
  r"( *)([0-9A-Za-z]+:)(\t)((?:[0-9A-Za-z][0-9A-Za-z] )+)( *\9)([a-zA-Z].*?)$" is(by-groups(text, name.label, text, literal.number.hex, text, using(Gas)))
  r"( *)([0-9A-Za-z]+:)(\t)((?:[0-9A-Za-z][0-9A-Za-z] )+)( *)(.*?)$" is(by-groups(text, name.label, text, literal.number.hex, text, literal.string))
  r"( *)([0-9A-Za-z]+:)(\t)((?:[0-9A-Za-z][0-9A-Za-z] )+)$" is(by-groups(text, name.label, text, literal.number.hex))
  r"\t\.\.\.$" is(text)
  r"(\t\t\t)([0-9A-Za-z]+:)( )([^\t]+)(\t)(.*?)([-+])(0x[0-9A-Za-z]+)$" is(by-groups(text, name.label, text, name.property, text, name.constant, punctuation, literal.number.hex))
  r"(\t\t\t)([0-9A-Za-z]+:)( )([^\t]+)(\t)(.*?)$" is(by-groups(text, name.label, text, name.property, text, name.constant))
  r"[^\n]+\n" is(other)


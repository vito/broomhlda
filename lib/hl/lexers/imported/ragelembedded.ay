use("atomy")
use("hl/define")

Lexer = lexer:
name: "Embedded Ragel"
aliases: ["ragel-em"]
extensions: [".rl"]
mimetypes: []
start: .root
flags: 0

lex(root):
  r"([^%\'\"/\#]+|%(?=[^%]|$)|\"(\\\\|\\\"|[^\"])*\"|'(\\\\|\\'|[^'])*'|/\*(.|\n)*?\*/|//.*$\n?|\\#.*$\n?|/(?!\*)(\\\\|\\/|[^/])*/|/)+" is(other)
  r"(%%)(?![{%])(.*)($|;)(\n?)" is(by-groups(punctuation, using(Ragel), punctuation, text))
  r"(%%%%|%%){" is(punctuation) -> go-to(multi-line-fsm)

lex(multi-line-fsm):
  r"(([^}\'\"\[/\#]|}(?=[^%]|$)|}%(?=[^%]|$)|[^\\][\\][{}]|(>|\$|%|<|@|<>)/|/(?!\*)(\\\\|\\/|[^/])*/\*|/(?=[^/\*]|$))+|\"(\\\\|\\\"|[^\"])*\"|'(\\\\|\\'|[^'])*'|\[(\\\\|\\\]|[^\]])*\]|/\*(.|\n)*?\*/|//.*$\n?|\\#.*$\n?)+" is(using(Ragel))
  r"}%%" is(punctuation) -> pop


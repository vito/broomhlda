use("atomy")
use("hl/define")

Lexer = lexer:
name: "Python 3.0 Traceback"
aliases: ["py3tb"]
extensions: [".py3tb"]
mimetypes: ["text/x-python3-traceback"]
start: .root
flags: 0

lex(root):
  r"\n" is(text)
  r"^Traceback \(most recent call last\):\n" is(generic.traceback) -> go-to(intb)
  r"^During handling of the above exception, another exception occurred:\n\n" is(generic.traceback)
  r"^The above exception was the direct cause of the following exception:\n\n" is(generic.traceback)

lex(intb):
  r"^(  File )(\"[^\"]+\")(, line )(\d+)(, in )(.+)(\n)" is(by-groups(text, name.builtin, text, literal.number, text, name, text))
  r"^(    )(.+)(\n)" is(by-groups(text, using(Python3), text))
  r"^([ \t]*)(\.\.\.)(\n)" is(by-groups(text, comment, text))
  r"^(.+)(: )(.+)(\n)" is(by-groups(generic.error, text, name, text)) -> pop
  r"^([a-zA-Z_][a-zA-Z0-9_]*)(:?\n)" is(by-groups(generic.error, text)) -> pop


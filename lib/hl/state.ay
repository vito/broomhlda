use(require("atomy"))

data(State):
  Continue
  GoTo(@matchers, @next)
  Pop
  PopNum(@num)
  Push
  DoAll(@states)
  Combined(@matchers)

def(Continue apply(_, _)):
  nil

def(GoTo apply(s, d)):
  s << @matchers fetch(@next) call(d)

def(Push apply(s, _)):
  s << s last

def(Pop apply(s, _)):
  s pop

def(PopNum apply(s, _)):
  s pop(@num)

def(DoAll apply(s, d)):
  @states each [sub]: sub apply(s, d)

def(Combined apply(s, d)):
  s << @matchers inject([]) [a, m]: a + m call(d)

namespace(broomhlda)

lexer(HL::Lexers::IrcLogs):

name: "IRC logs"
aliases: ["irc"]
extensions: [".weechatlog"]
mimetypes: ["text/x-irclog"]
start: #root
flags: 0

lex(msg):
  Regexp new("[^\\s]+:(?!//)") is(name.attribute)
  Regexp new(".*\\n") is(text) -> pop

lex(root):
  Regexp new("^\\*\\*\\*\\*(.*)\\*\\*\\*\\*$") is(comment)
  Regexp new("^\10        (\10          # irssi / xchat and others\10          (?: \\[|\\()?                  # Opening bracket or paren for the timestamp\10            (?:                        # Timestamp\10                (?: (?:\\d{1,4} [-/]?)+ # Date as - or /-separated groups of digits\10                 [T ])?                # Date/time separator: T or space\10                (?: \\d?\\d [:.]?)+      # Time as :/.-separated groups of 1 or 2 digits\10            )\10          (?: \\]|\\))?\\s+               # Closing bracket or paren for the timestamp\10        |\10          # weechat\10          \\d{4}\\s\\w{3}\\s\\d{2}\\s        # Date\10          \\d{2}:\\d{2}:\\d{2}\\s+         # Time + Whitespace\10        |\10          # xchat\10          \\w{3}\\s\\d{2}\\s               # Date\10          \\d{2}:\\d{2}:\\d{2}\\s+         # Time + Whitespace\10        )?\10    (\\s*<[^>]*>\\s*)$") is(by-groups(comment.preproc, name.tag))
  Regexp new("^\10        (\10          # irssi / xchat and others\10          (?: \\[|\\()?                  # Opening bracket or paren for the timestamp\10            (?:                        # Timestamp\10                (?: (?:\\d{1,4} [-/]?)+ # Date as - or /-separated groups of digits\10                 [T ])?                # Date/time separator: T or space\10                (?: \\d?\\d [:.]?)+      # Time as :/.-separated groups of 1 or 2 digits\10            )\10          (?: \\]|\\))?\\s+               # Closing bracket or paren for the timestamp\10        |\10          # weechat\10          \\d{4}\\s\\w{3}\\s\\d{2}\\s        # Date\10          \\d{2}:\\d{2}:\\d{2}\\s+         # Time + Whitespace\10        |\10          # xchat\10          \\w{3}\\s\\d{2}\\s               # Date\10          \\d{2}:\\d{2}:\\d{2}\\s+         # Time + Whitespace\10        )?\10    \10                (\\s*<.*?>\\s*)          # Nick ") is(by-groups(comment.preproc, name.tag)) -> go-to(msg)
  Regexp new("^\10        (\10          # irssi / xchat and others\10          (?: \\[|\\()?                  # Opening bracket or paren for the timestamp\10            (?:                        # Timestamp\10                (?: (?:\\d{1,4} [-/]?)+ # Date as - or /-separated groups of digits\10                 [T ])?                # Date/time separator: T or space\10                (?: \\d?\\d [:.]?)+      # Time as :/.-separated groups of 1 or 2 digits\10            )\10          (?: \\]|\\))?\\s+               # Closing bracket or paren for the timestamp\10        |\10          # weechat\10          \\d{4}\\s\\w{3}\\s\\d{2}\\s        # Date\10          \\d{2}:\\d{2}:\\d{2}\\s+         # Time + Whitespace\10        |\10          # xchat\10          \\w{3}\\s\\d{2}\\s               # Date\10          \\d{2}:\\d{2}:\\d{2}\\s+         # Time + Whitespace\10        )?\10    \10                (\\s*[*]\\s+)            # Star\10                ([^\\s]+\\s+.*?\\n)       # Nick + rest of message ") is(by-groups(comment.preproc, keyword, generic.inserted))
  Regexp new("^\10        (\10          # irssi / xchat and others\10          (?: \\[|\\()?                  # Opening bracket or paren for the timestamp\10            (?:                        # Timestamp\10                (?: (?:\\d{1,4} [-/]?)+ # Date as - or /-separated groups of digits\10                 [T ])?                # Date/time separator: T or space\10                (?: \\d?\\d [:.]?)+      # Time as :/.-separated groups of 1 or 2 digits\10            )\10          (?: \\]|\\))?\\s+               # Closing bracket or paren for the timestamp\10        |\10          # weechat\10          \\d{4}\\s\\w{3}\\s\\d{2}\\s        # Date\10          \\d{2}:\\d{2}:\\d{2}\\s+         # Time + Whitespace\10        |\10          # xchat\10          \\w{3}\\s\\d{2}\\s               # Date\10          \\d{2}:\\d{2}:\\d{2}\\s+         # Time + Whitespace\10        )?\10    \10                (\\s*(?:\\*{3}|<?-[!@=P]?->?)\\s*)  # Star(s) or symbols\10                ([^\\s]+\\s+)                     # Nick + Space\10                (.*?\\n)                         # Rest of message ") is(by-groups(comment.preproc, keyword, literal.string, comment))
  Regexp new("^.*?\\n") is(text)


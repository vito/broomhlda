namespace(broomhlda)

lexer(HL::Lexers::Batch):

name: "Batchfile"
aliases: ["bat"]
extensions: [".bat", ".cmd"]
mimetypes: ["application/x-dos-batch"]
start: #root
flags: Regexp::IGNORECASE

lex(basic):
  Regexp new("\".*?\"") is(literal.string.double)
  Regexp new("'.*?'") is(literal.string.single)
  Regexp new("`.*?`") is(literal.string.backtick)
  Regexp new("-?\\d+") is(literal.number)
  Regexp new(",") is(punctuation)
  Regexp new("=") is(operator)
  Regexp new("/\\S+") is(name)
  Regexp new(":\\w+") is(name.label)
  Regexp new("\\w:\\w+") is(text)
  Regexp new("([<>|])(\\s*)(\\w+)") is(by-groups(punctuation, text, name))

lex(root):
  Regexp new("^\\s*@") is(punctuation)
  Regexp new("^(\\s*)(rem\\s.*)$") is(by-groups(text, comment))
  Regexp new("\".*?\"") is(literal.string.double)
  Regexp new("'.*?'") is(literal.string.single)
  Regexp new("%%?[\126$:\\w]+%?") is(name.variable)
  Regexp new("::.*") is(comment)
  Regexp new("(set)(\\s+)(\\w+)") is(by-groups(keyword, text, name.variable))
  Regexp new("(call)(\\s+)(:\\w+)") is(by-groups(keyword, text, name.label))
  Regexp new("(goto)(\\s+)(\\w+)") is(by-groups(keyword, text, name.label))
  Regexp new("\\b(set|call|echo|on|off|endlocal|for|do|goto|if|pause|setlocal|shift|errorlevel|exist|defined|cmdextversion|errorlevel|else|cd|md|del|deltree|cls|choice)\\b") is(keyword)
  Regexp new("\\b(equ|neq|lss|leq|gtr|geq)\\b") is(operator)
  any-of(basic)
  Regexp new(".") is(text)

lex(echo):
  Regexp new("\\^\\^|\\^<|\\^>|\\^\\|") is(literal.string.escape)
  Regexp new("\\n") is(text) -> pop
  any-of(basic)
  Regexp new("[^\\'\"^]+") is(text)


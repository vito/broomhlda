namespace(broomhlda)

lexer(HL::Lexers::Python3Traceback):

name: "Python 3.0 Traceback"
aliases: ["py3tb"]
extensions: [".py3tb"]
mimetypes: ["text/x-python3-traceback"]
start: #root
flags: 0

lex(root):
  Regexp new("\\n") is(text)
  Regexp new("^Traceback \\(most recent call last\\):\\n") is(generic.traceback) -> go-to(intb)
  Regexp new("^During handling of the above exception, another exception occurred:\\n\\n") is(generic.traceback)
  Regexp new("^The above exception was the direct cause of the following exception:\\n\\n") is(generic.traceback)

lex(intb):
  Regexp new("^(  File )(\"[^\"]+\")(, line )(\\d+)(, in )(.+)(\\n)") is(by-groups(text, name.builtin, text, literal.number, text, name, text))
  Regexp new("^(    )(.+)(\\n)") is(by-groups(text, using(Python3), text))
  Regexp new("^([ \\t]*)(...)(\\n)") is(by-groups(text, comment, text))
  Regexp new("^(.+)(: )(.+)(\\n)") is(by-groups(generic.error, text, name, text)) -> pop
  Regexp new("^([a-zA-Z_][a-zA-Z0-9_]*)(:?\\n)") is(by-groups(generic.error, text)) -> pop


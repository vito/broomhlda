namespace(broomhlda)

lexer(HL::Lexers::GLShader):

name: "GLSL"
aliases: ["glsl"]
extensions: [".vert", ".frag", ".geo"]
mimetypes: ["text/x-glslsrc"]
start: #root
flags: 0

lex(root):
  Regexp new("^#.*") is(comment.preproc)
  Regexp new("//.*") is(comment.single)
  Regexp new("/(\\\\\\n)?[*](.|\\n)*?[*](\\\\\\n)?/") is(comment.multiline)
  Regexp new("\\+|-|\126|!=?|\\*|/|%|<<|>>|<=?|>=?|==?|&&?|\\^|\\|\\|?") is(operator)
  Regexp new("[?:]") is(operator)
  Regexp new("\\bdefined\\b") is(operator)
  Regexp new("[;{}(),\\[\\]]") is(punctuation)
  Regexp new("[+-]?\\d*\\.\\d+([eE][-+]?\\d+)?") is(literal.number.float)
  Regexp new("[+-]?\\d+\\.\\d*([eE][-+]?\\d+)?") is(literal.number.float)
  Regexp new("0[xX][0-9a-fA-F]*") is(literal.number.hex)
  Regexp new("0[0-7]*") is(literal.number.oct)
  Regexp new("[1-9][0-9]*") is(literal.number.integer)
  Regexp new("\\b(attribute|const|uniform|varying|centroid|break|continue|do|for|while|if|else|in|out|inout|float|int|void|bool|true|false|invariant|discard|return|mat[234]|mat[234]x[234]|vec[234]|[ib]vec[234]|sampler[123]D|samplerCube|sampler[12]DShadow|struct)\\b") is(keyword)
  Regexp new("\\b(asm|class|union|enum|typedef|template|this|packed|goto|switch|default|inline|noinline|volatile|public|static|extern|external|interface|long|short|double|half|fixed|unsigned|lowp|mediump|highp|precision|input|output|hvec[234]|[df]vec[234]|sampler[23]DRect|sampler2DRectShadow|sizeof|cast|namespace|using)\\b") is(keyword)
  Regexp new("[a-zA-Z_][a-zA-Z_0-9]*") is(name)
  Regexp new("\\.") is(punctuation)
  Regexp new("\\s+") is(text)


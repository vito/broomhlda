lexer(HL::Lexers::Ragel):

name: "Ragel"
aliases: ["ragel"]
extensions: []
mimetypes: []
start: #root
flags: 0

lex(host):
  Regexp new("([^{}\\'\"/#]+|[^\\\\][\\\\][{}]|\"(\\\\\\\\|\\\\\"|[^\"])*\"|'(\\\\\\\\|\\\\'|[^'])*'|//.*$\\n?|/\\*(.|\\n)*?\\*/|\\#.*$\\n?|/(?!\\*)(\\\\\\\\|\\\\/|[^/])*/|/)+") is(other)
  Regexp new("{") is(punctuation) -> push
  Regexp new("}") is(punctuation) -> pop

lex(literals):
  Regexp new("\"(\\\\\\\\|\\\\\"|[^\"])*\"") is(literal.string)
  Regexp new("'(\\\\\\\\|\\\\'|[^'])*'") is(literal.string)
  Regexp new("\\[(\\\\\\\\|\\\\\\]|[^\\]])*\\]") is(literal.string)
  Regexp new("/(?!\\*)(\\\\\\\\|\\\\/|[^/])*/") is(literal.string.regex)

lex(whitespace):
  Regexp new("\\s+") is(text.whitespace)

lex(keywords):
  Regexp new("(access|action|alphtype)\\b") is(keyword)
  Regexp new("(getkey|write|machine|include)\\b") is(keyword)
  Regexp new("(any|ascii|extend|alpha|digit|alnum|lower|upper)\\b") is(keyword)
  Regexp new("(xdigit|cntrl|graph|print|punct|space|zlen|empty)\\b") is(keyword)

lex(operators):
  Regexp new(",") is(operator)
  Regexp new("\\||&|-|--") is(operator)
  Regexp new("\\.|<:|:>|:>>") is(operator)
  Regexp new(":") is(operator)
  Regexp new("->") is(operator)
  Regexp new("(>|\\$|%|<|@|<>)(/|eof\\b)") is(operator)
  Regexp new("(>|\\$|%|<|@|<>)(!|err\\b)") is(operator)
  Regexp new("(>|\\$|%|<|@|<>)(\\^|lerr\\b)") is(operator)
  Regexp new("(>|\\$|%|<|@|<>)(\126|to\\b)") is(operator)
  Regexp new("(>|\\$|%|<|@|<>)(\\*|from\\b)") is(operator)
  Regexp new(">|@|\\$|%") is(operator)
  Regexp new("\\*|\\?|\\+|{[0-9]*,[0-9]*}") is(operator)
  Regexp new("!|\\^") is(operator)
  Regexp new("\\(|\\)") is(operator)

lex(identifiers):
  Regexp new("[a-zA-Z_][a-zA-Z_0-9]*") is(name.variable)

lex(root):
  any-of(literals)
  any-of(whitespace)
  any-of(comments)
  any-of(keywords)
  any-of(numbers)
  any-of(identifiers)
  any-of(operators)
  Regexp new("{") is(punctuation) -> go-to(host)
  Regexp new("=") is(operator)
  Regexp new(";") is(punctuation)

lex(comments):
  Regexp new("\\#.*$") is(comment)

lex(numbers):
  Regexp new("0x[0-9A-Fa-f]+") is(literal.number.hex)
  Regexp new("[+-]?[0-9]+") is(literal.number.integer)

